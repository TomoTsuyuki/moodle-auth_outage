name: Moodle plugin CI for master

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # This prevents starting selenium and php servers using moodle-plugin-ci in-built functionality.
  MOODLE_START_BEHAT_SERVERS: 'NO'
  PROFILE: 'chrome'

jobs:
  citest:
    name: CI test
    runs-on: 'ubuntu-latest'

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: 'postgres'
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 5432:5432

      mariadb:
        image: mariadb
        env:
          MYSQL_USER: 'root'
          MYSQL_ALLOW_EMPTY_PASSWORD: "true"
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
    strategy:
      fail-fast: false
      matrix:
        database: ['pgsql', 'mariadb']
        moodle-branch: ['MOODLE_39_STABLE']
        node: ['14.15.1']
        php: ['7.2', '7.3']

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          path: plugin

      - name: Install node  ${{ matrix.node }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Setup PHP ${{ matrix.php }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: pgsql, zip, gd, xmlrpc, soap
          coverage: none

      - name: Initialise moodle-plugin-ci
        run: |
          composer create-project -n --no-dev --prefer-dist moodlehq/moodle-plugin-ci ci ^3
          # Add dirs to $PATH
          echo $(cd ci/bin; pwd) >> $GITHUB_PATH
          echo $(cd ci/vendor/bin; pwd) >> $GITHUB_PATH
          # PHPUnit depends on en_AU.UTF-8 locale
          sudo locale-gen en_AU.UTF-8
      - name: Install Moodle
        run: |
          mkdir ~/.npm-global
          npm config set prefix '~/.npm-global'
          export PATH=~/.npm-global/bin:$PATH
          source ~/.profile
          moodle-plugin-ci install -vvv --plugin ./plugin --db-host=127.0.0.1
          # Start Selenuim Standalone server using docker.
          docker run -d -p 4444:4444 -v /dev/shm:/dev/shm -v $HOME/build/moodle:$HOME/build/moodle selenium/standalone-${PROFILE}:3
          # Start php built-in server.
          php -S localhost:8000 -t $HOME/build/moodle
          # Wait to make sure docker container is fully running.
          sleep 10

        env:
          DB: ${{ matrix.database }}
          MOODLE_BRANCH: ${{ matrix.moodle-branch }}

      - name: Run phplint
        if: ${{ always() }}
        run: moodle-plugin-ci phplint

      - name: Run phpcpd
        if: ${{ always() }}
        run: moodle-plugin-ci phpcpd || true

      - name: Run phpmd
        if: ${{ always() }}
        run: moodle-plugin-ci phpmd

      - name: Run codechecker
        if: ${{ always() }}
        run: moodle-plugin-ci codechecker

      - name: Run validate
        if: ${{ always() }}
        run: moodle-plugin-ci validate

      - name: Run savepoints
        if: ${{ always() }}
        run: moodle-plugin-ci savepoints

      - name: Run mustache
        if: ${{ always() }}
        run: moodle-plugin-ci phpcpd

      - name: Run grunt
        if: ${{ always() }}
        run: moodle-plugin-ci grunt

      - name: Run phpdoc
        if: ${{ always() }}
        run: moodle-plugin-ci phpdoc

      - name: Run phpunit
        if: ${{ always() }}
        run: moodle-plugin-ci phpunit

      - name: Run behat
        if: ${{ always() }}
        run: moodle-plugin-ci behat --profile $PROFILE
